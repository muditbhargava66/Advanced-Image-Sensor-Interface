# Ruff configuration for CI/CD compatibility
line-length = 130
target-version = "py310"

[lint]
select = [
    "E",   # Pycodestyle
    "F",   # Pyflakes
    "W",   # Pycodestyle warnings
    "UP",  # Pyupgrade
    "PL",  # Pylint
    "RUF", # Ruff-specific
    "I"    # Isort
]

# Global ignores - comprehensive list for CI/CD compatibility
ignore = [
    "D",       # Disable all pydocstyle rules
    "PLR2004", # Magic numbers (common in tests)
    "B006",    # Mutable defaults (enable later)
    "E501",    # Line length (handled by formatter)
    "UP038",   # Use | for union types
    "UP007",   # Use X | Y for type unions
    "E712",    # Comparison to True/False
    # Acceptable complexity for domain-specific functions
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments
    # Configuration management globals are acceptable
    "PLW0603", # Global statement usage
    # Import organization and placement
    "PLC0415", # Import should be at top-level (acceptable for optional deps)
    "I001",    # Import block formatting (handled by formatter)
    # Performance optimizations (acceptable for readability)
    "PLR1730", # Replace if with max/min call
]

# Directory-specific ignores
[lint.per-file-ignores]
"__init__.py" = ["ALL"]
"tests/**/*.py" = [
    "D1", "PLR2004", "F841", "I001", "PLC0415"
]
"benchmarks/**/*.py" = ["D1", "B006"]
"scripts/**/*.py" = ["D1", "PLR2004"]
"examples/**/*.py" = [
    "F401",  # Unused imports in examples (might be used by users)
    "D1", "PLR2004"
]
"src/advanced_image_sensor_interface/sensor_interface/gpu_acceleration.py" = [
    "F401",  # Optional dependency imports (numba)
]